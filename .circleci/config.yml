version: 2
workflows:
  version: 2
  alpine-builds:
    jobs:
      - alpine-i686
      - alpine-x86_64

env: &env
  environment:
    JULIA_CPU_CORES: 4
    JULIA_TEST_MAXRSS_MB: 800
    FORCE_ASSERTIONS: 1
    LLVM_ASSERTIONS: 1
    USECCACHE: 1

jobs:
  alpine-i686:
    docker:
      - image: i386/alpine:3.7
        environment:
          ARCH: i686
    <<: *env
    steps: &steps
      - run:
          name: Install build dependencies
          command: |
            apk update
            apk add git openssh build-base gfortran perl linux-headers ccache cmake tar \
              curl m4 patch pkgconf python2 xz
      - checkout
      - run:
          name: Set up CI environment
          command: | # For consistency with other CI providers
            # FIXME: This needs to be unset, or else the libgit2 tests fail
            git config --global --unset url."ssh://git@github.com".insteadOf
            # Check out merge commit for consistency with other CI providers
            if [ -n "${CIRCLE_PULL_REQUEST}" ]; then
              git remote set-url origin git@github.com:ararslan/julia.git
              git fetch origin +refs/pull/$(basename ${CIRCLE_PULL_REQUEST})/merge
              git checkout -qf FETCH_HEAD
            fi
            # Set for build cache
            echo "${ARCH} ${HOME} $(date +%Y%W)" > /tmp/weeknumber
      - restore_cache:
          keys:
            - ccache-{{ arch }}-{{ checksum "/tmp/weeknumber" }}
      - run:
          name: Build Julia
          command: make -j${JULIA_CPU_CORES} all
      - run:
          name: Run tests
          command: ./julia test/runtests.jl all
      - run:
          name: Run network-enabled tests
          command: ./julia test/runtests.jl download LibGit2/online Pkg/pkg Pkg3/pkg
      - run:
          name: Run embedding test
          command: make -C test embedding
      - run:
          command: dmesg
          when: on_fail
      - save_cache:
          key: ccache-{{ arch }}-{{ checksum "/tmp/weeknumber" }}
          paths:
            - ~/.ccache

  alpine-x86_64:
    docker:
      - image: alpine:3.7
        environment:
          ARCH: x86_64
    <<: *env
    steps: *steps
